type Time {
  hours: Int!,
  minutes: Int!
}

input TimeInput {
  hours: Int!,
  minutes: Int!
}

type Schedule {
  from: Time!,
  to: Time!,
  high: Int!
}

input ScheduleInput {
  from: TimeInput!,
  to: TimeInput!,
  high: Int!
}

type Rule {
  id: ID!,
  name: String,
  active: Boolean!,
  repeat: Boolean!,
  days: Days!,
  next_dates: [Date]!,
  schedules: [Schedule]!,
  createdOn: Date!,
  modifiedOn: Date!
}

input CreateRuleInput {
  id: ID!
  name: String,
  active: Boolean!,
  repeat: Boolean!,
  days: Days!,
  next_dates: [Date]!,
  schedules: [ScheduleInput]!
}

input UpdateRuleInput {
  id: ID!
  name: String,
  active: Boolean,
  repeat: Boolean,
  days: Days,
  next_dates: [Date],
  schedules: [ScheduleInput]
}

input DeleteRuleInput {
  id: ID!
}

extend type Query {
  listRules(page: Int, pageSize: Int): [Rule]!
}

extend type Mutation {
  createRule(rule: CreateRuleInput): Rule
  updateRule(rule: UpdateRuleInput): Rule
  deleteRule(rule: DeleteRuleInput): Rule
}
